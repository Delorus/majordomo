plugins {
    id 'java'
}

group 'page.devnet'

ext {
    junitVersion = '5.5.2'
    slf4jVersion = '1.7.25'
    log4jVersion = '2.11.2'
    lombokVersion = '1.18.6'
}

allprojects {
    plugins.withType(JavaPlugin) {
        targetCompatibility = 11
        sourceCompatibility = 11

        tasks.withType(JavaCompile) {
            options.encoding = 'UTF-8'
        }

        repositories {
            mavenLocal()
            mavenCentral()
            jcenter()
        }
    }
}


subprojects {
    plugins.withType(JavaPlugin) {
        group "${project.rootProject.group}.${project.name}"

        // common dependencies
        dependencies {
            // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
            implementation "org.slf4j:slf4j-api:$slf4jVersion"
            // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-api
            implementation "org.apache.logging.log4j:log4j-api:$log4jVersion"
            // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-core
            implementation "org.apache.logging.log4j:log4j-core:$log4jVersion"
            // https://mvnrepository.com/artifact/org.apache.logging.log4j/log4j-slf4j-impl
            implementation "org.apache.logging.log4j:log4j-slf4j-impl:$log4jVersion"


            testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
            testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

            compileOnly "org.projectlombok:lombok:$lombokVersion"
            annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        }

        test {
            useJUnitPlatform()
        }
    }

    plugins.withType(ApplicationPlugin) {
        plugins.withId("com.github.johnrengelman.shadow") {
            shadowJar {
                destinationDirectory = new File("${project.rootProject.projectDir}/bin")
                archiveClassifier = ''
                archiveVersion = ''
            }
        }
    }
}